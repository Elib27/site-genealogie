---
import Button from "./shared/Button.astro";
import PaperBackground from "./shared/PaperBackground.astro";

export interface Props {
  cardTitle: string;
  cardContent: string;
  buttonContent: string;
  cardClass: string;
}
const { cardTitle, cardContent, buttonContent, cardClass} = Astro.props;

---

<article class={`card ${cardClass}`}>
  <PaperBackground />
  <h2>{cardTitle}</h2>
  <p>{cardContent}</p>
  <Button
    title={buttonContent}
    fontSize="1.2rem"
    buttonColor="#DEB057"
  />
</article>

<style lang="scss">
  .card {
    width: 400px;
    padding: 3rem;
    border-radius: 20px;
    background-color: var(--white);
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);
    transition: box-shadow 0.2s ease-out, transform 0.2s ease-out;
    flex-shrink: 0;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    h2 {
      font-size: 1.5rem;
      font-family: "Crimson Text", serif;
      text-align: center;
      margin-bottom: 2rem;
      position: relative;
      z-index: 1;
    }
    p {
      font-size: 0.875rem;
      line-height: 1.6;
      margin-bottom: 2.5rem;
      text-align: justify;
      position: relative;
      z-index: 1;
    }
  }

  @media screen and (max-width: 500px) {
    .card {
      width: 100%;
      max-width: 400px;
      padding: 2rem;
    }
  }
</style>

<script define:vars={{cardClass}}>

  const openButton = document.querySelector(`.cards-container .${cardClass} .begin-button`);
  const serviceBigCard = document.querySelector(`#services-big-${cardClass}`);
  const serviceBigCardCloseBtn = document.querySelector(`#services-big-${cardClass} .close-btn`);

  serviceBigCardCloseBtn.addEventListener("click", handleClickCloseBtn);

  function handleClickCloseBtn() {
    document.removeEventListener("click", handleClickOutsideClose);
    serviceBigCard.classList.remove("visible");
    setTimeout(() => {
      serviceBigCard.classList.add("no-display");
    }, 200);
  }

  function handleClickOutsideClose(e) {
    if (!serviceBigCard.contains(e.target)) {
      document.removeEventListener("click", handleClickOutsideClose);
      serviceBigCard.classList.remove("visible");
      setTimeout(() => {
        serviceBigCard.classList.add("no-display");
      }, 200);
    }
  }

  openButton.addEventListener("click", () => {
    serviceBigCard.classList.remove("no-display");
    serviceBigCard.classList.add("visible");
    document.removeEventListener("click", handleClickOutsideClose);
    setTimeout(() => {
      document.addEventListener("click", handleClickOutsideClose);
    }, 200);
  });

</script>