---
import SectionLayout from "../layouts/SectionLayout.astro";
import HowItWorksCard from "./HowItWorksCard.astro";
import PaperBackground from "./shared/PaperBackground.astro";

const cards = [
  {
    title: "Premier RDV",
    description: "Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.",
    number: "I"
  },
  {
    title: "Devis",
    description: "Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.",
    number: "II"
  },
  {
    title: "Recherches",
    description: "Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.",
    number: "III"
  },
  {
    title: "Livraison",
    description: "Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.",
    number: "IV"
  },
  {
    title: "Facture",
    description: "Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.",
    number: "V"
  }
]

---
<div class="sticky-container">
  <div class="sticky-element">
    <SectionLayout
      title="Comment Ã§a marche ?"
      sectionId="comment-ca-marche"
      sectionHeight="100vh"
      >
      <PaperBackground />
      <div class="cards-wrapper">
        <div class="cards-container">
          <div class="row first-row">
            {cards.map((card, index) => (
            index < 3 &&
            <HowItWorksCard
              cardTitle={card.title}
                cardContent={card.description}
                number={card.number}
              />
            ))}
          </div>
          <div class="row second-row">
            {cards.map((card, index) => (
              index > 2 &&
              <HowItWorksCard
                cardTitle={card.title}
                cardContent={card.description}
                number={card.number}
              />
            ))}
          </div>
          <div class="dotted-line"></div>
        </div>
      </div>
    </SectionLayout>
  </div>
</div>


<style lang="scss">
  .sticky-container {
    height: 250vh;
  }
  .sticky-element {
    height: 100vh;
    width: 100%;
    position: sticky;
    top: 0;
  }
  .cards-wrapper {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;
    .cards-container {
      width: clamp(750px, 80%, 1000px);
      position: relative;
    }
    .row {
      width: 100%;
      display: flex;
      flex-direction: row;
    }
    .first-row {
      margin-bottom: 10vh;
      justify-content: space-between;
    }
    .second-row {
      justify-content: space-evenly;
    }
    .dotted-line {
      --animation-percentage: 0%;
      border: 3px dotted #C2C0B2;
      border-left: 0;
      position: absolute;
      top: calc((100% - 10vh) / 4);
      bottom: calc((100% - 10vh) / 4);
      left: -5vw;
      right: -5vw;
    }
  }
</style>

<script defer>
  window.addEventListener('scroll', sectionAnimationOnScroll);

  const container = document.querySelector('.sticky-container');
  const stickyElement = document.querySelector('.sticky-element');
  const dottedLine =  document.querySelector('.dotted-line');

  function sectionAnimationOnScroll() {
    const viewportHeight = stickyElement.offsetHeight;
    const sectionScrollFromTop = container.offsetTop
    const scrollY = window.scrollY;
    const scrollPinDistance = container.offsetHeight;

    const scrollYEnd = sectionScrollFromTop + scrollPinDistance - viewportHeight;

    if (scrollY > sectionScrollFromTop && scrollY < scrollYEnd) {
      const scrollPercentage = Math.round(((scrollY - sectionScrollFromTop) / (scrollPinDistance - viewportHeight)) * 100);
      dottedLine.style.setProperty('--animation-percentage', scrollPercentage + "%");
    }
    else if (scrollY < sectionScrollFromTop ) {
      dottedLine.style.setProperty('--animation-percentage', "0%");
    }
    else {
      dottedLine.style.setProperty('--animation-percentage', "100%");
    }
  }
</script>