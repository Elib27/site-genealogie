---
import SectionLayout from '../layouts/SectionLayout.astro'
import HowItWorksCard from './HowItWorksCard.astro'
import PaperBackground from './shared/PaperBackground.astro'

const cards = [
  {
    title: 'Premier RDV',
    description:
      'Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.',
    number: 'I',
  },
  {
    title: 'Devis',
    description:
      'Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.',
    number: 'II',
  },
  {
    title: 'Recherches',
    description:
      'Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.',
    number: 'III',
  },
  {
    title: 'Livraison',
    description:
      'Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.',
    number: 'IV',
  },
  {
    title: 'Facture',
    description:
      'Maecenas eget condimentum velit, sit amet feugiat lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.',
    number: 'V',
  },
]
---

<div class="sticky-container">
  <div class="sticky-element">
    <SectionLayout
      title="Comment Ã§a marche ?"
      sectionId="comment-ca-marche"
      sectionHeight="100%"
    >
      <PaperBackground />
      <div class="cards-wrapper">
        <div class="cards-container">
          <div class="row first-row">
            {
              cards.map(
                (card, index) =>
                  index < 3 && (
                    <HowItWorksCard
                      cardTitle={card.title}
                      cardContent={card.description}
                      number={card.number}
                      classes={`card${index + 1}`}
                    />
                  )
              )
            }
          </div>
          <div class="row second-row">
            {
              cards.map(
                (card, index) =>
                  index > 2 && (
                    <HowItWorksCard
                      cardTitle={card.title}
                      cardContent={card.description}
                      number={card.number}
                      classes={`card${index + 1}`}
                    />
                  )
              )
            }
          </div>
          <div class="dotted-lines">
            <div class="disabled-line top"></div>
            <div class="disabled-line right"></div>
            <div class="disabled-line bottom"></div>
            <div class="active-dotted-line top"></div>
            <div class="active-dotted-line right"></div>
            <div class="active-dotted-line bottom"></div>
            <svg class="left-arrow" width="19" height="33" viewBox="0 0 19 33" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill="currentColor" d="M16.1821 32.1471C16.6518 32.147 17.1109 32.0077 17.5013 31.7467C17.8918 31.4857 18.1961 31.1148 18.3759 30.6809C18.5556 30.247 18.6026 29.7695 18.511 29.3089C18.4194 28.8483 18.1933 28.4251 17.8612 28.093L6.10695 16.3373L17.8613 4.58178C18.3067 4.13642 18.5569 3.5324 18.5569 2.90257C18.5569 2.27275 18.3067 1.66873 17.8613 1.22337C17.416 0.778024 16.8119 0.52783 16.1821 0.527832C15.5523 0.527834 14.9483 0.778032 14.5029 1.22339L1.06933 14.6582C0.848746 14.8787 0.67376 15.1405 0.554374 15.4286C0.434987 15.7167 0.373538 16.0255 0.373538 16.3374C0.373538 16.6493 0.434987 16.9581 0.554374 17.2462C0.67376 17.5344 0.848746 17.7961 1.06933 18.0166L14.5029 31.4513C14.7232 31.6722 14.9849 31.8474 15.2731 31.9668C15.5613 32.0862 15.8702 32.1475 16.1821 32.1471V32.1471Z"/>
            </svg>            
          </div>
        </div>
      </div>
    </SectionLayout>
  </div>
</div>

<style lang="scss">
  .sticky-container {
    height: 300vh;
  }
  .sticky-element {
    height: 100vh;
    width: 100%;
    position: sticky;
    top: 0;
  }
  .cards-wrapper {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;
    .cards-container {
      width: clamp(750px, 80%, 1000px);
      position: relative;
    }
    .row {
      width: 100%;
      display: flex;
      flex-direction: row;
    }
    .first-row {
      margin-bottom: 10vh;
      justify-content: space-between;
    }
    .second-row {
      flex-direction: row-reverse;
      justify-content: space-evenly;
    }
    .dotted-lines {
      --topLinePercentage: 0%;
      --rightLinePercentage: 0%;
      --bottomLinePercentage: 0%;
      --border-width: 4px;
      position: absolute;
      top: calc((100% - 10vh) / 4);
      bottom: calc((100% - 10vh) / 4);
      left: -5vw;
      right: -5vw;
      .left-arrow {
        color: #d0d0d0;
        position: absolute;
        bottom: -15px;
        left: -12px;
        &.active {
          color: var(--primary);
        }
      }
      .disabled-line {
      color: #d0d0d0;
      position: absolute;
      right: 0;
      border-collapse: none;
      &.top {
        top: 0;
        left: 0;
        border-top: var(--border-width) dotted #d0d0d0;
      }
      &.right {
        top: 0;
        bottom: 0;
        border-right: var(--border-width) dotted #d0d0d0;

      }
      &.bottom {
        bottom: 0;
        left: 0;
        border-top: var(--border-width) dotted #d0d0d0;
      }
    }
      .active-dotted-line {
        position: absolute;
        right: 0;
        &.top {
          top: 0;
          left: 0;
          border-top: var(--border-width) dotted var(--primary);
          -webkit-mask-image: -webkit-linear-gradient(
            left,
            rgba(0, 0, 0, 1) var(--topLinePercentage),
            rgba(0, 0, 0, 0) var(--topLinePercentage)
          );
        }
        &.right {
        top: 0;
        bottom: 0;
        border-right: var(--border-width) dotted var(--primary);
        -webkit-mask-image: -webkit-linear-gradient(
          top,
          rgba(0, 0, 0, 1) var(--rightLinePercentage),
          rgba(0, 0, 0, 0) var(--rightLinePercentage)
          );
        }
        &.bottom {
          bottom: 0;
          left: 0;
          border-top: var(--border-width) dotted var(--primary);
          -webkit-mask-image: -webkit-linear-gradient(
            right,
            rgba(0, 0, 0, 1) var(--bottomLinePercentage),
            rgba(0, 0, 0, 0) var(--bottomLinePercentage)
          );
        }
      }
    }
  }

  @media screen and (max-width: 900px) {
    .sticky-container {
      height: auto;
    }
    .sticky-element {
      height: auto;
    }
    .row {
      flex-direction: column !important;
      align-items: center;
      &.first-row {
        margin-bottom: 0;
      }
    }
    .dotted-line {
      display: none;
    }
  }

</style>

<script>
  import "../scripts/HIWSectionAnimation.js";
</script>
